Terminals unused in grammar

    UNDERSCORE
    LT
    GT
    LTE
    GTE
    NE
    AND
    OR
    EQ


State 0 conflicts: 2 shift/reduce
State 3 conflicts: 3 shift/reduce
State 12 conflicts: 2 shift/reduce, 3 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: FUNCT Type ID LPRN ParamsList RPRN LCB Code RCB SEMICOLON
    2        | FunctCall SEMICOLON
    3        | Program Program
    4        | ε

    5 Code: Code VarDecl
    6     | Code Stmt
    7     | ε

    8 FunctCall: ID LPRN CallParamsList RPRN

    9 Type: INT
   10     | CHAR
   11     | STRING
   12     | BOOL

   13 ParamsList: ParamsList COMMA Param
   14           | Param
   15           | ε

   16 Param: Type ID

   17 CallParamsList: CallParamsList COMMA Expr
   18               | Expr
   19               | ε

   20 StrucAccess: StrucAccess PERIOD ID
   21            | ID PERIOD ID

   22 VarDecl: Type ID SEMICOLON
   23        | Type ID LSB Expr RSB SEMICOLON
   24        | STRUC ID LCB VarDecl RCB

   25 Stmt: ID ASS Expr SEMICOLON
   26     | ID LSB NUMBER RSB ASS Expr SEMICOLON
   27     | WRITE ID SEMICOLON
   28     | REEE Expr SEMICOLON

   29 Expr: ID
   30     | ID LSB NUMBER RSB
   31     | FunctCall
   32     | StrucAccess
   33     | NUMBER
   34     | ID PLUS Expr
   35     | NUMBER PLUS Expr
   36     | ID MINUS Expr
   37     | NUMBER MINUS Expr
   38     | ID TIMES Expr
   39     | NUMBER TIMES Expr
   40     | ID DIVIDE Expr
   41     | NUMBER DIVIDE Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <string> (258) 9
    CHAR <string> (259) 10
    STRING <string> (260) 11
    BOOL <string> (261) 12
    STRUC <string> (262) 24
    FUNCT <string> (263) 1
    ID <string> (264) 1 8 16 20 21 22 23 24 25 26 27 29 30 34 36 38 40
    NUMBER <string> (265) 26 30 33 35 37 39 41
    SEMICOLON <string> (266) 1 2 22 23 25 26 27 28
    COMMA <string> (267) 13 17
    UNDERSCORE <string> (268)
    PERIOD <string> (269) 20 21
    LT <string> (270)
    GT <string> (271)
    LTE <string> (272)
    GTE <string> (273)
    NE <string> (274)
    AND <string> (275)
    OR <string> (276)
    EQ <string> (277)
    ASS <string> (278) 25 26
    WRITE <string> (279) 27
    REEE <string> (280) 28
    PLUS <string> (281) 34 35
    MINUS <string> (282) 36 37
    TIMES <string> (283) 38 39
    DIVIDE <string> (284) 40 41
    LPRN <string> (285) 1 8
    RPRN <string> (286) 1 8
    LCB <string> (287) 1 24
    RCB <string> (288) 1 24
    LSB <string> (289) 23 26 30
    RSB <string> (290) 23 26 30


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    Program <ast_node> (37)
        on left: 1 2 3 4
        on right: 0 3
    Code <ast_node> (38)
        on left: 5 6 7
        on right: 1 5 6
    FunctCall <ast_node> (39)
        on left: 8
        on right: 2 31
    Type <ast_node> (40)
        on left: 9 10 11 12
        on right: 1 16 22 23
    ParamsList <ast_node> (41)
        on left: 13 14 15
        on right: 1 13
    Param <ast_node> (42)
        on left: 16
        on right: 13 14
    CallParamsList <ast_node> (43)
        on left: 17 18 19
        on right: 8 17
    StrucAccess <ast_node> (44)
        on left: 20 21
        on right: 20 32
    VarDecl <ast_node> (45)
        on left: 22 23 24
        on right: 5 24
    Stmt <ast_node> (46)
        on left: 25 26 27 28
        on right: 6
    Expr <ast_node> (47)
        on left: 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 17 18 23 25 26 28 34 35 36 37 38 39 40 41


State 0

    0 $accept: • Program $end

    FUNCT  shift, and go to state 1
    ID     shift, and go to state 2

    FUNCT     [reduce using rule 4 (Program)]
    ID        [reduce using rule 4 (Program)]
    $default  reduce using rule 4 (Program)

    Program    go to state 3
    FunctCall  go to state 4


State 1

    1 Program: FUNCT • Type ID LPRN ParamsList RPRN LCB Code RCB SEMICOLON

    INT     shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 8

    Type  go to state 9


State 2

    8 FunctCall: ID • LPRN CallParamsList RPRN

    LPRN  shift, and go to state 10


State 3

    0 $accept: Program • $end
    3 Program: Program • Program

    $end   shift, and go to state 11
    FUNCT  shift, and go to state 1
    ID     shift, and go to state 2

    $end   [reduce using rule 4 (Program)]
    FUNCT  [reduce using rule 4 (Program)]
    ID     [reduce using rule 4 (Program)]

    Program    go to state 12
    FunctCall  go to state 4


State 4

    2 Program: FunctCall • SEMICOLON

    SEMICOLON  shift, and go to state 13


State 5

    9 Type: INT •

    $default  reduce using rule 9 (Type)


State 6

   10 Type: CHAR •

    $default  reduce using rule 10 (Type)


State 7

   11 Type: STRING •

    $default  reduce using rule 11 (Type)


State 8

   12 Type: BOOL •

    $default  reduce using rule 12 (Type)


State 9

    1 Program: FUNCT Type • ID LPRN ParamsList RPRN LCB Code RCB SEMICOLON

    ID  shift, and go to state 14


State 10

    8 FunctCall: ID LPRN • CallParamsList RPRN

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    $default  reduce using rule 19 (CallParamsList)

    FunctCall       go to state 17
    CallParamsList  go to state 18
    StrucAccess     go to state 19
    Expr            go to state 20


State 11

    0 $accept: Program $end •

    $default  accept


State 12

    3 Program: Program • Program
    3        | Program Program •

    FUNCT  shift, and go to state 1
    ID     shift, and go to state 2

    $end      reduce using rule 3 (Program)
    $end      [reduce using rule 4 (Program)]
    FUNCT     [reduce using rule 3 (Program)]
    FUNCT     [reduce using rule 4 (Program)]
    ID        [reduce using rule 3 (Program)]
    ID        [reduce using rule 4 (Program)]
    $default  reduce using rule 3 (Program)

    Program    go to state 12
    FunctCall  go to state 4


State 13

    2 Program: FunctCall SEMICOLON •

    $default  reduce using rule 2 (Program)


State 14

    1 Program: FUNCT Type ID • LPRN ParamsList RPRN LCB Code RCB SEMICOLON

    LPRN  shift, and go to state 21


State 15

    8 FunctCall: ID • LPRN CallParamsList RPRN
   21 StrucAccess: ID • PERIOD ID
   29 Expr: ID •
   30     | ID • LSB NUMBER RSB
   34     | ID • PLUS Expr
   36     | ID • MINUS Expr
   38     | ID • TIMES Expr
   40     | ID • DIVIDE Expr

    PERIOD  shift, and go to state 22
    PLUS    shift, and go to state 23
    MINUS   shift, and go to state 24
    TIMES   shift, and go to state 25
    DIVIDE  shift, and go to state 26
    LPRN    shift, and go to state 10
    LSB     shift, and go to state 27

    $default  reduce using rule 29 (Expr)


State 16

   33 Expr: NUMBER •
   35     | NUMBER • PLUS Expr
   37     | NUMBER • MINUS Expr
   39     | NUMBER • TIMES Expr
   41     | NUMBER • DIVIDE Expr

    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    TIMES   shift, and go to state 30
    DIVIDE  shift, and go to state 31

    $default  reduce using rule 33 (Expr)


State 17

   31 Expr: FunctCall •

    $default  reduce using rule 31 (Expr)


State 18

    8 FunctCall: ID LPRN CallParamsList • RPRN
   17 CallParamsList: CallParamsList • COMMA Expr

    COMMA  shift, and go to state 32
    RPRN   shift, and go to state 33


State 19

   20 StrucAccess: StrucAccess • PERIOD ID
   32 Expr: StrucAccess •

    PERIOD  shift, and go to state 34

    $default  reduce using rule 32 (Expr)


State 20

   18 CallParamsList: Expr •

    $default  reduce using rule 18 (CallParamsList)


State 21

    1 Program: FUNCT Type ID LPRN • ParamsList RPRN LCB Code RCB SEMICOLON

    INT     shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 8

    $default  reduce using rule 15 (ParamsList)

    Type        go to state 35
    ParamsList  go to state 36
    Param       go to state 37


State 22

   21 StrucAccess: ID PERIOD • ID

    ID  shift, and go to state 38


State 23

   34 Expr: ID PLUS • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 39


State 24

   36 Expr: ID MINUS • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 40


State 25

   38 Expr: ID TIMES • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 41


State 26

   40 Expr: ID DIVIDE • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 42


State 27

   30 Expr: ID LSB • NUMBER RSB

    NUMBER  shift, and go to state 43


State 28

   35 Expr: NUMBER PLUS • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 44


State 29

   37 Expr: NUMBER MINUS • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 45


State 30

   39 Expr: NUMBER TIMES • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 46


State 31

   41 Expr: NUMBER DIVIDE • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 47


State 32

   17 CallParamsList: CallParamsList COMMA • Expr

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 48


State 33

    8 FunctCall: ID LPRN CallParamsList RPRN •

    $default  reduce using rule 8 (FunctCall)


State 34

   20 StrucAccess: StrucAccess PERIOD • ID

    ID  shift, and go to state 49


State 35

   16 Param: Type • ID

    ID  shift, and go to state 50


State 36

    1 Program: FUNCT Type ID LPRN ParamsList • RPRN LCB Code RCB SEMICOLON
   13 ParamsList: ParamsList • COMMA Param

    COMMA  shift, and go to state 51
    RPRN   shift, and go to state 52


State 37

   14 ParamsList: Param •

    $default  reduce using rule 14 (ParamsList)


State 38

   21 StrucAccess: ID PERIOD ID •

    $default  reduce using rule 21 (StrucAccess)


State 39

   34 Expr: ID PLUS Expr •

    $default  reduce using rule 34 (Expr)


State 40

   36 Expr: ID MINUS Expr •

    $default  reduce using rule 36 (Expr)


State 41

   38 Expr: ID TIMES Expr •

    $default  reduce using rule 38 (Expr)


State 42

   40 Expr: ID DIVIDE Expr •

    $default  reduce using rule 40 (Expr)


State 43

   30 Expr: ID LSB NUMBER • RSB

    RSB  shift, and go to state 53


State 44

   35 Expr: NUMBER PLUS Expr •

    $default  reduce using rule 35 (Expr)


State 45

   37 Expr: NUMBER MINUS Expr •

    $default  reduce using rule 37 (Expr)


State 46

   39 Expr: NUMBER TIMES Expr •

    $default  reduce using rule 39 (Expr)


State 47

   41 Expr: NUMBER DIVIDE Expr •

    $default  reduce using rule 41 (Expr)


State 48

   17 CallParamsList: CallParamsList COMMA Expr •

    $default  reduce using rule 17 (CallParamsList)


State 49

   20 StrucAccess: StrucAccess PERIOD ID •

    $default  reduce using rule 20 (StrucAccess)


State 50

   16 Param: Type ID •

    $default  reduce using rule 16 (Param)


State 51

   13 ParamsList: ParamsList COMMA • Param

    INT     shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 8

    Type   go to state 35
    Param  go to state 54


State 52

    1 Program: FUNCT Type ID LPRN ParamsList RPRN • LCB Code RCB SEMICOLON

    LCB  shift, and go to state 55


State 53

   30 Expr: ID LSB NUMBER RSB •

    $default  reduce using rule 30 (Expr)


State 54

   13 ParamsList: ParamsList COMMA Param •

    $default  reduce using rule 13 (ParamsList)


State 55

    1 Program: FUNCT Type ID LPRN ParamsList RPRN LCB • Code RCB SEMICOLON

    $default  reduce using rule 7 (Code)

    Code  go to state 56


State 56

    1 Program: FUNCT Type ID LPRN ParamsList RPRN LCB Code • RCB SEMICOLON
    5 Code: Code • VarDecl
    6     | Code • Stmt

    INT     shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRUC   shift, and go to state 57
    ID      shift, and go to state 58
    WRITE   shift, and go to state 59
    REEE    shift, and go to state 60
    RCB     shift, and go to state 61

    Type     go to state 62
    VarDecl  go to state 63
    Stmt     go to state 64


State 57

   24 VarDecl: STRUC • ID LCB VarDecl RCB

    ID  shift, and go to state 65


State 58

   25 Stmt: ID • ASS Expr SEMICOLON
   26     | ID • LSB NUMBER RSB ASS Expr SEMICOLON

    ASS  shift, and go to state 66
    LSB  shift, and go to state 67


State 59

   27 Stmt: WRITE • ID SEMICOLON

    ID  shift, and go to state 68


State 60

   28 Stmt: REEE • Expr SEMICOLON

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 69


State 61

    1 Program: FUNCT Type ID LPRN ParamsList RPRN LCB Code RCB • SEMICOLON

    SEMICOLON  shift, and go to state 70


State 62

   22 VarDecl: Type • ID SEMICOLON
   23        | Type • ID LSB Expr RSB SEMICOLON

    ID  shift, and go to state 71


State 63

    5 Code: Code VarDecl •

    $default  reduce using rule 5 (Code)


State 64

    6 Code: Code Stmt •

    $default  reduce using rule 6 (Code)


State 65

   24 VarDecl: STRUC ID • LCB VarDecl RCB

    LCB  shift, and go to state 72


State 66

   25 Stmt: ID ASS • Expr SEMICOLON

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 73


State 67

   26 Stmt: ID LSB • NUMBER RSB ASS Expr SEMICOLON

    NUMBER  shift, and go to state 74


State 68

   27 Stmt: WRITE ID • SEMICOLON

    SEMICOLON  shift, and go to state 75


State 69

   28 Stmt: REEE Expr • SEMICOLON

    SEMICOLON  shift, and go to state 76


State 70

    1 Program: FUNCT Type ID LPRN ParamsList RPRN LCB Code RCB SEMICOLON •

    $default  reduce using rule 1 (Program)


State 71

   22 VarDecl: Type ID • SEMICOLON
   23        | Type ID • LSB Expr RSB SEMICOLON

    SEMICOLON  shift, and go to state 77
    LSB        shift, and go to state 78


State 72

   24 VarDecl: STRUC ID LCB • VarDecl RCB

    INT     shift, and go to state 5
    CHAR    shift, and go to state 6
    STRING  shift, and go to state 7
    BOOL    shift, and go to state 8
    STRUC   shift, and go to state 57

    Type     go to state 62
    VarDecl  go to state 79


State 73

   25 Stmt: ID ASS Expr • SEMICOLON

    SEMICOLON  shift, and go to state 80


State 74

   26 Stmt: ID LSB NUMBER • RSB ASS Expr SEMICOLON

    RSB  shift, and go to state 81


State 75

   27 Stmt: WRITE ID SEMICOLON •

    $default  reduce using rule 27 (Stmt)


State 76

   28 Stmt: REEE Expr SEMICOLON •

    $default  reduce using rule 28 (Stmt)


State 77

   22 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 22 (VarDecl)


State 78

   23 VarDecl: Type ID LSB • Expr RSB SEMICOLON

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 82


State 79

   24 VarDecl: STRUC ID LCB VarDecl • RCB

    RCB  shift, and go to state 83


State 80

   25 Stmt: ID ASS Expr SEMICOLON •

    $default  reduce using rule 25 (Stmt)


State 81

   26 Stmt: ID LSB NUMBER RSB • ASS Expr SEMICOLON

    ASS  shift, and go to state 84


State 82

   23 VarDecl: Type ID LSB Expr • RSB SEMICOLON

    RSB  shift, and go to state 85


State 83

   24 VarDecl: STRUC ID LCB VarDecl RCB •

    $default  reduce using rule 24 (VarDecl)


State 84

   26 Stmt: ID LSB NUMBER RSB ASS • Expr SEMICOLON

    ID      shift, and go to state 15
    NUMBER  shift, and go to state 16

    FunctCall    go to state 17
    StrucAccess  go to state 19
    Expr         go to state 86


State 85

   23 VarDecl: Type ID LSB Expr RSB • SEMICOLON

    SEMICOLON  shift, and go to state 87


State 86

   26 Stmt: ID LSB NUMBER RSB ASS Expr • SEMICOLON

    SEMICOLON  shift, and go to state 88


State 87

   23 VarDecl: Type ID LSB Expr RSB SEMICOLON •

    $default  reduce using rule 23 (VarDecl)


State 88

   26 Stmt: ID LSB NUMBER RSB ASS Expr SEMICOLON •

    $default  reduce using rule 26 (Stmt)
