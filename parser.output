Nonterminals useless in grammar

    Code
    Type
    ParamsList
    Param
    VarDecl
    Stmt


Terminals unused in grammar

    INT
    CHAR
    STRING
    BOOL
    STRUC
    FUNCT
    UNDERSCORE
    PERIOD
    LT
    GT
    LTE
    GTE
    NE
    AND
    OR
    EQ
    ASS
    WRITE
    REEE
    MINUS
    TIMES
    DIVIDE
    LCB
    RCB
    LSB
    RSB


Rules useless in grammar

   11 Program: FUNCT Type ID LPRN ParamsList RPRN LCB Code RCB SEMICOLON

   12 Code: Code VarDecl
   13     | Code Stmt

   14 Type: INT
   15     | CHAR
   16     | STRING
   17     | BOOL

   18 ParamsList: ParamsList COMMA Param
   19           | Param

   20 Param: Type ID

   21 VarDecl: Type ID SEMICOLON
   22        | Type ID LSB NUMBER RSB
   23        | STRUC ID LCB VarDecl RCB

   24 Stmt: ID ASS Expr SEMICOLON
   25     | ID LSB NUMBER RSB ASS Expr SEMICOLON
   26     | WRITE ID SEMICOLON
   27     | REEE Expr SEMICOLON


State 6 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FunctCall SEMICOLON
    2        | Program Program

    3 FunctCall: ID LPRN CallParamsList RPRN

    4 CallParamsList: CallParamsList COMMA Expr
    5               | Expr

    6 Expr: ID
    7     | FunctCall
    8     | NUMBER
    9     | ID PLUS Expr
   10     | NUMBER PLUS Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <string> (258)
    CHAR <string> (259)
    STRING <string> (260)
    BOOL <string> (261)
    STRUC <string> (262)
    FUNCT <string> (263)
    ID <string> (264) 3 6 9
    NUMBER <string> (265) 8 10
    SEMICOLON <string> (266) 1
    COMMA <string> (267) 4
    UNDERSCORE <string> (268)
    PERIOD <string> (269)
    LT <string> (270)
    GT <string> (271)
    LTE <string> (272)
    GTE <string> (273)
    NE <string> (274)
    AND <string> (275)
    OR <string> (276)
    EQ <string> (277)
    ASS <string> (278)
    WRITE <string> (279)
    REEE <string> (280)
    PLUS <string> (281) 9 10
    MINUS <string> (282)
    TIMES <string> (283)
    DIVIDE <string> (284)
    LPRN <string> (285) 3
    RPRN <string> (286) 3
    LCB <string> (287)
    RCB <string> (288)
    LSB <string> (289)
    RSB <string> (290)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    Program <ast_node> (37)
        on left: 1 2
        on right: 0 2
    FunctCall <ast_node> (38)
        on left: 3
        on right: 1 7
    CallParamsList <ast_node> (39)
        on left: 4 5
        on right: 3 4
    Expr <ast_node> (40)
        on left: 6 7 8 9 10
        on right: 4 5 9 10


State 0

    0 $accept: • Program $end

    ID  shift, and go to state 1

    Program    go to state 2
    FunctCall  go to state 3


State 1

    3 FunctCall: ID • LPRN CallParamsList RPRN

    LPRN  shift, and go to state 4


State 2

    0 $accept: Program • $end
    2 Program: Program • Program

    $end  shift, and go to state 5
    ID    shift, and go to state 1

    Program    go to state 6
    FunctCall  go to state 3


State 3

    1 Program: FunctCall • SEMICOLON

    SEMICOLON  shift, and go to state 7


State 4

    3 FunctCall: ID LPRN • CallParamsList RPRN

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall       go to state 10
    CallParamsList  go to state 11
    Expr            go to state 12


State 5

    0 $accept: Program $end •

    $default  accept


State 6

    2 Program: Program • Program
    2        | Program Program •

    ID  shift, and go to state 1

    ID        [reduce using rule 2 (Program)]
    $default  reduce using rule 2 (Program)

    Program    go to state 6
    FunctCall  go to state 3


State 7

    1 Program: FunctCall SEMICOLON •

    $default  reduce using rule 1 (Program)


State 8

    3 FunctCall: ID • LPRN CallParamsList RPRN
    6 Expr: ID •
    9     | ID • PLUS Expr

    PLUS  shift, and go to state 13
    LPRN  shift, and go to state 4

    $default  reduce using rule 6 (Expr)


State 9

    8 Expr: NUMBER •
   10     | NUMBER • PLUS Expr

    PLUS  shift, and go to state 14

    $default  reduce using rule 8 (Expr)


State 10

    7 Expr: FunctCall •

    $default  reduce using rule 7 (Expr)


State 11

    3 FunctCall: ID LPRN CallParamsList • RPRN
    4 CallParamsList: CallParamsList • COMMA Expr

    COMMA  shift, and go to state 15
    RPRN   shift, and go to state 16


State 12

    5 CallParamsList: Expr •

    $default  reduce using rule 5 (CallParamsList)


State 13

    9 Expr: ID PLUS • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 17


State 14

   10 Expr: NUMBER PLUS • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 18


State 15

    4 CallParamsList: CallParamsList COMMA • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 19


State 16

    3 FunctCall: ID LPRN CallParamsList RPRN •

    $default  reduce using rule 3 (FunctCall)


State 17

    9 Expr: ID PLUS Expr •

    $default  reduce using rule 9 (Expr)


State 18

   10 Expr: NUMBER PLUS Expr •

    $default  reduce using rule 10 (Expr)


State 19

    4 CallParamsList: CallParamsList COMMA Expr •

    $default  reduce using rule 4 (CallParamsList)
