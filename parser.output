Terminals unused in grammar

    UNDERSCORE
    LT
    GT
    LTE
    GTE
    NE
    AND
    OR
    EQ
    MINUS
    TIMES
    DIVIDE


State 14 conflicts: 1 shift/reduce
State 16 conflicts: 5 shift/reduce
State 19 conflicts: 3 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Code

    2 Code: PieceOfCode Code
    3     | PieceOfCode

    4 PieceOfCode: FunctList
    5            | VarDeclList
    6            | StmtList

    7 Type: INT
    8     | CHAR
    9     | STRING
   10     | BOOL

   11 FunctList: FunctList Funct
   12          | Funct

   13 Funct: FUNCT Type ID LPRN ParamsList RPRN FunctBlock

   14 ParamsList: ParamsList COMMA Param
   15           | Param

   16 Param: Type ID

   17 FunctBlock: LCB PieceOfCode RCB SEMICOLON

   18 FunctCall: ID LPRN CallParamsList RPRN

   19 CallParamsList: CallParamsList COMMA Expr
   20               | Expr

   21 StrucAccess: StrucAccess PERIOD ID
   22            | ID PERIOD ID

   23 VarDeclList: VarDeclList VarDecl
   24            | VarDecl

   25 VarDecl: Type ID SEMICOLON
   26        | Type ID LSB NUMBER RSB
   27        | STRUC ID LCB VarDeclList RCB

   28 StmtList: Stmt StmtList
   29         | Stmt

   30 Stmt: ID ASS Expr SEMICOLON
   31     | ID LSB NUMBER RSB ASS Expr SEMICOLON
   32     | WRITE ID SEMICOLON
   33     | REEE Expr SEMICOLON

   34 Expr: ID
   35     | ID LSB NUMBER RSB
   36     | FunctCall
   37     | StrucAccess
   38     | NUMBER
   39     | ID PLUS Expr
   40     | NUMBER PLUS Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <string> (258) 7
    CHAR <string> (259) 8
    STRING <string> (260) 9
    BOOL <string> (261) 10
    STRUC <string> (262) 27
    FUNCT <string> (263) 13
    ID <string> (264) 13 16 18 21 22 25 26 27 30 31 32 34 35 39
    NUMBER <string> (265) 26 31 35 38 40
    SEMICOLON <string> (266) 17 25 30 31 32 33
    COMMA <string> (267) 14 19
    UNDERSCORE <string> (268)
    PERIOD <string> (269) 21 22
    LT <string> (270)
    GT <string> (271)
    LTE <string> (272)
    GTE <string> (273)
    NE <string> (274)
    AND <string> (275)
    OR <string> (276)
    EQ <string> (277)
    ASS <string> (278) 30 31
    WRITE <string> (279) 32
    REEE <string> (280) 33
    PLUS <string> (281) 39 40
    MINUS <string> (282)
    TIMES <string> (283)
    DIVIDE <string> (284)
    LPRN <string> (285) 13 18
    RPRN <string> (286) 13 18
    LCB <string> (287) 17 27
    RCB <string> (288) 17 27
    LSB <string> (289) 26 31 35
    RSB <string> (290) 26 31 35


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    Program <ast_node> (37)
        on left: 1
        on right: 0
    Code <ast_node> (38)
        on left: 2 3
        on right: 1 2
    PieceOfCode <ast_node> (39)
        on left: 4 5 6
        on right: 2 3 17
    Type <ast_node> (40)
        on left: 7 8 9 10
        on right: 13 16 25 26
    FunctList <ast_node> (41)
        on left: 11 12
        on right: 4 11
    Funct <ast_node> (42)
        on left: 13
        on right: 11 12
    ParamsList <ast_node> (43)
        on left: 14 15
        on right: 13 14
    Param <ast_node> (44)
        on left: 16
        on right: 14 15
    FunctBlock <ast_node> (45)
        on left: 17
        on right: 13
    FunctCall <ast_node> (46)
        on left: 18
        on right: 36
    CallParamsList <ast_node> (47)
        on left: 19 20
        on right: 18 19
    StrucAccess <ast_node> (48)
        on left: 21 22
        on right: 21 37
    VarDeclList <ast_node> (49)
        on left: 23 24
        on right: 5 23 27
    VarDecl <ast_node> (50)
        on left: 25 26 27
        on right: 23 24
    StmtList <ast_node> (51)
        on left: 28 29
        on right: 6 28
    Stmt <ast_node> (52)
        on left: 30 31 32 33
        on right: 28 29
    Expr <ast_node> (53)
        on left: 34 35 36 37 38 39 40
        on right: 19 20 30 31 33 39 40


State 0

    0 $accept: • Program $end

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRUC   shift, and go to state 5
    FUNCT   shift, and go to state 6
    ID      shift, and go to state 7
    WRITE   shift, and go to state 8
    REEE    shift, and go to state 9

    Program      go to state 10
    Code         go to state 11
    PieceOfCode  go to state 12
    Type         go to state 13
    FunctList    go to state 14
    Funct        go to state 15
    VarDeclList  go to state 16
    VarDecl      go to state 17
    StmtList     go to state 18
    Stmt         go to state 19


State 1

    7 Type: INT •

    $default  reduce using rule 7 (Type)


State 2

    8 Type: CHAR •

    $default  reduce using rule 8 (Type)


State 3

    9 Type: STRING •

    $default  reduce using rule 9 (Type)


State 4

   10 Type: BOOL •

    $default  reduce using rule 10 (Type)


State 5

   27 VarDecl: STRUC • ID LCB VarDeclList RCB

    ID  shift, and go to state 20


State 6

   13 Funct: FUNCT • Type ID LPRN ParamsList RPRN FunctBlock

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4

    Type  go to state 21


State 7

   30 Stmt: ID • ASS Expr SEMICOLON
   31     | ID • LSB NUMBER RSB ASS Expr SEMICOLON

    ASS  shift, and go to state 22
    LSB  shift, and go to state 23


State 8

   32 Stmt: WRITE • ID SEMICOLON

    ID  shift, and go to state 24


State 9

   33 Stmt: REEE • Expr SEMICOLON

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctCall    go to state 27
    StrucAccess  go to state 28
    Expr         go to state 29


State 10

    0 $accept: Program • $end

    $end  shift, and go to state 30


State 11

    1 Program: Code •

    $default  reduce using rule 1 (Program)


State 12

    2 Code: PieceOfCode • Code
    3     | PieceOfCode •

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRUC   shift, and go to state 5
    FUNCT   shift, and go to state 6
    ID      shift, and go to state 7
    WRITE   shift, and go to state 8
    REEE    shift, and go to state 9

    $default  reduce using rule 3 (Code)

    Code         go to state 31
    PieceOfCode  go to state 12
    Type         go to state 13
    FunctList    go to state 14
    Funct        go to state 15
    VarDeclList  go to state 16
    VarDecl      go to state 17
    StmtList     go to state 18
    Stmt         go to state 19


State 13

   25 VarDecl: Type • ID SEMICOLON
   26        | Type • ID LSB NUMBER RSB

    ID  shift, and go to state 32


State 14

    4 PieceOfCode: FunctList •
   11 FunctList: FunctList • Funct

    FUNCT  shift, and go to state 6

    FUNCT     [reduce using rule 4 (PieceOfCode)]
    $default  reduce using rule 4 (PieceOfCode)

    Funct  go to state 33


State 15

   12 FunctList: Funct •

    $default  reduce using rule 12 (FunctList)


State 16

    5 PieceOfCode: VarDeclList •
   23 VarDeclList: VarDeclList • VarDecl

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRUC   shift, and go to state 5

    INT       [reduce using rule 5 (PieceOfCode)]
    CHAR      [reduce using rule 5 (PieceOfCode)]
    STRING    [reduce using rule 5 (PieceOfCode)]
    BOOL      [reduce using rule 5 (PieceOfCode)]
    STRUC     [reduce using rule 5 (PieceOfCode)]
    $default  reduce using rule 5 (PieceOfCode)

    Type     go to state 13
    VarDecl  go to state 34


State 17

   24 VarDeclList: VarDecl •

    $default  reduce using rule 24 (VarDeclList)


State 18

    6 PieceOfCode: StmtList •

    $default  reduce using rule 6 (PieceOfCode)


State 19

   28 StmtList: Stmt • StmtList
   29         | Stmt •

    ID     shift, and go to state 7
    WRITE  shift, and go to state 8
    REEE   shift, and go to state 9

    ID        [reduce using rule 29 (StmtList)]
    WRITE     [reduce using rule 29 (StmtList)]
    REEE      [reduce using rule 29 (StmtList)]
    $default  reduce using rule 29 (StmtList)

    StmtList  go to state 35
    Stmt      go to state 19


State 20

   27 VarDecl: STRUC ID • LCB VarDeclList RCB

    LCB  shift, and go to state 36


State 21

   13 Funct: FUNCT Type • ID LPRN ParamsList RPRN FunctBlock

    ID  shift, and go to state 37


State 22

   30 Stmt: ID ASS • Expr SEMICOLON

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctCall    go to state 27
    StrucAccess  go to state 28
    Expr         go to state 38


State 23

   31 Stmt: ID LSB • NUMBER RSB ASS Expr SEMICOLON

    NUMBER  shift, and go to state 39


State 24

   32 Stmt: WRITE ID • SEMICOLON

    SEMICOLON  shift, and go to state 40


State 25

   18 FunctCall: ID • LPRN CallParamsList RPRN
   22 StrucAccess: ID • PERIOD ID
   34 Expr: ID •
   35     | ID • LSB NUMBER RSB
   39     | ID • PLUS Expr

    PERIOD  shift, and go to state 41
    PLUS    shift, and go to state 42
    LPRN    shift, and go to state 43
    LSB     shift, and go to state 44

    $default  reduce using rule 34 (Expr)


State 26

   38 Expr: NUMBER •
   40     | NUMBER • PLUS Expr

    PLUS  shift, and go to state 45

    $default  reduce using rule 38 (Expr)


State 27

   36 Expr: FunctCall •

    $default  reduce using rule 36 (Expr)


State 28

   21 StrucAccess: StrucAccess • PERIOD ID
   37 Expr: StrucAccess •

    PERIOD  shift, and go to state 46

    $default  reduce using rule 37 (Expr)


State 29

   33 Stmt: REEE Expr • SEMICOLON

    SEMICOLON  shift, and go to state 47


State 30

    0 $accept: Program $end •

    $default  accept


State 31

    2 Code: PieceOfCode Code •

    $default  reduce using rule 2 (Code)


State 32

   25 VarDecl: Type ID • SEMICOLON
   26        | Type ID • LSB NUMBER RSB

    SEMICOLON  shift, and go to state 48
    LSB        shift, and go to state 49


State 33

   11 FunctList: FunctList Funct •

    $default  reduce using rule 11 (FunctList)


State 34

   23 VarDeclList: VarDeclList VarDecl •

    $default  reduce using rule 23 (VarDeclList)


State 35

   28 StmtList: Stmt StmtList •

    $default  reduce using rule 28 (StmtList)


State 36

   27 VarDecl: STRUC ID LCB • VarDeclList RCB

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRUC   shift, and go to state 5

    Type         go to state 13
    VarDeclList  go to state 50
    VarDecl      go to state 17


State 37

   13 Funct: FUNCT Type ID • LPRN ParamsList RPRN FunctBlock

    LPRN  shift, and go to state 51


State 38

   30 Stmt: ID ASS Expr • SEMICOLON

    SEMICOLON  shift, and go to state 52


State 39

   31 Stmt: ID LSB NUMBER • RSB ASS Expr SEMICOLON

    RSB  shift, and go to state 53


State 40

   32 Stmt: WRITE ID SEMICOLON •

    $default  reduce using rule 32 (Stmt)


State 41

   22 StrucAccess: ID PERIOD • ID

    ID  shift, and go to state 54


State 42

   39 Expr: ID PLUS • Expr

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctCall    go to state 27
    StrucAccess  go to state 28
    Expr         go to state 55


State 43

   18 FunctCall: ID LPRN • CallParamsList RPRN

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctCall       go to state 27
    CallParamsList  go to state 56
    StrucAccess     go to state 28
    Expr            go to state 57


State 44

   35 Expr: ID LSB • NUMBER RSB

    NUMBER  shift, and go to state 58


State 45

   40 Expr: NUMBER PLUS • Expr

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctCall    go to state 27
    StrucAccess  go to state 28
    Expr         go to state 59


State 46

   21 StrucAccess: StrucAccess PERIOD • ID

    ID  shift, and go to state 60


State 47

   33 Stmt: REEE Expr SEMICOLON •

    $default  reduce using rule 33 (Stmt)


State 48

   25 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 25 (VarDecl)


State 49

   26 VarDecl: Type ID LSB • NUMBER RSB

    NUMBER  shift, and go to state 61


State 50

   23 VarDeclList: VarDeclList • VarDecl
   27 VarDecl: STRUC ID LCB VarDeclList • RCB

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRUC   shift, and go to state 5
    RCB     shift, and go to state 62

    Type     go to state 13
    VarDecl  go to state 34


State 51

   13 Funct: FUNCT Type ID LPRN • ParamsList RPRN FunctBlock

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4

    Type        go to state 63
    ParamsList  go to state 64
    Param       go to state 65


State 52

   30 Stmt: ID ASS Expr SEMICOLON •

    $default  reduce using rule 30 (Stmt)


State 53

   31 Stmt: ID LSB NUMBER RSB • ASS Expr SEMICOLON

    ASS  shift, and go to state 66


State 54

   22 StrucAccess: ID PERIOD ID •

    $default  reduce using rule 22 (StrucAccess)


State 55

   39 Expr: ID PLUS Expr •

    $default  reduce using rule 39 (Expr)


State 56

   18 FunctCall: ID LPRN CallParamsList • RPRN
   19 CallParamsList: CallParamsList • COMMA Expr

    COMMA  shift, and go to state 67
    RPRN   shift, and go to state 68


State 57

   20 CallParamsList: Expr •

    $default  reduce using rule 20 (CallParamsList)


State 58

   35 Expr: ID LSB NUMBER • RSB

    RSB  shift, and go to state 69


State 59

   40 Expr: NUMBER PLUS Expr •

    $default  reduce using rule 40 (Expr)


State 60

   21 StrucAccess: StrucAccess PERIOD ID •

    $default  reduce using rule 21 (StrucAccess)


State 61

   26 VarDecl: Type ID LSB NUMBER • RSB

    RSB  shift, and go to state 70


State 62

   27 VarDecl: STRUC ID LCB VarDeclList RCB •

    $default  reduce using rule 27 (VarDecl)


State 63

   16 Param: Type • ID

    ID  shift, and go to state 71


State 64

   13 Funct: FUNCT Type ID LPRN ParamsList • RPRN FunctBlock
   14 ParamsList: ParamsList • COMMA Param

    COMMA  shift, and go to state 72
    RPRN   shift, and go to state 73


State 65

   15 ParamsList: Param •

    $default  reduce using rule 15 (ParamsList)


State 66

   31 Stmt: ID LSB NUMBER RSB ASS • Expr SEMICOLON

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctCall    go to state 27
    StrucAccess  go to state 28
    Expr         go to state 74


State 67

   19 CallParamsList: CallParamsList COMMA • Expr

    ID      shift, and go to state 25
    NUMBER  shift, and go to state 26

    FunctCall    go to state 27
    StrucAccess  go to state 28
    Expr         go to state 75


State 68

   18 FunctCall: ID LPRN CallParamsList RPRN •

    $default  reduce using rule 18 (FunctCall)


State 69

   35 Expr: ID LSB NUMBER RSB •

    $default  reduce using rule 35 (Expr)


State 70

   26 VarDecl: Type ID LSB NUMBER RSB •

    $default  reduce using rule 26 (VarDecl)


State 71

   16 Param: Type ID •

    $default  reduce using rule 16 (Param)


State 72

   14 ParamsList: ParamsList COMMA • Param

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4

    Type   go to state 63
    Param  go to state 76


State 73

   13 Funct: FUNCT Type ID LPRN ParamsList RPRN • FunctBlock

    LCB  shift, and go to state 77

    FunctBlock  go to state 78


State 74

   31 Stmt: ID LSB NUMBER RSB ASS Expr • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 75

   19 CallParamsList: CallParamsList COMMA Expr •

    $default  reduce using rule 19 (CallParamsList)


State 76

   14 ParamsList: ParamsList COMMA Param •

    $default  reduce using rule 14 (ParamsList)


State 77

   17 FunctBlock: LCB • PieceOfCode RCB SEMICOLON

    INT     shift, and go to state 1
    CHAR    shift, and go to state 2
    STRING  shift, and go to state 3
    BOOL    shift, and go to state 4
    STRUC   shift, and go to state 5
    FUNCT   shift, and go to state 6
    ID      shift, and go to state 7
    WRITE   shift, and go to state 8
    REEE    shift, and go to state 9

    PieceOfCode  go to state 80
    Type         go to state 13
    FunctList    go to state 14
    Funct        go to state 15
    VarDeclList  go to state 16
    VarDecl      go to state 17
    StmtList     go to state 18
    Stmt         go to state 19


State 78

   13 Funct: FUNCT Type ID LPRN ParamsList RPRN FunctBlock •

    $default  reduce using rule 13 (Funct)


State 79

   31 Stmt: ID LSB NUMBER RSB ASS Expr SEMICOLON •

    $default  reduce using rule 31 (Stmt)


State 80

   17 FunctBlock: LCB PieceOfCode • RCB SEMICOLON

    RCB  shift, and go to state 81


State 81

   17 FunctBlock: LCB PieceOfCode RCB • SEMICOLON

    SEMICOLON  shift, and go to state 82


State 82

   17 FunctBlock: LCB PieceOfCode RCB SEMICOLON •

    $default  reduce using rule 17 (FunctBlock)
