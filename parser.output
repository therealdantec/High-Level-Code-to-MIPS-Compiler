Terminals unused in grammar

    UNDERSCORE
    TRUTH
    FALSITY


State 0 conflicts: 2 shift/reduce
State 3 conflicts: 3 shift/reduce
State 13 conflicts: 2 shift/reduce, 3 reduce/reduce
State 117 conflicts: 2 shift/reduce
State 118 conflicts: 2 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclareFunct Code RCB SEMICOLON
    2        | FunctCall SEMICOLON
    3        | Program Program
    4        | ε

    5 DeclareFunct: FUNCT Type ID LPRN ParamsList RPRN LCB

    6 Code: Code VarDecl
    7     | Code Stmt
    8     | ε

    9 FunctCall: ID LPRN CallParamsList RPRN

   10 Type: INT
   11     | CHAR
   12     | STRING
   13     | BOOL

   14 ParamsList: ParamsList COMMA Param
   15           | Param
   16           | ε

   17 Param: Type ID

   18 CallParamsList: CallParamsList COMMA Expr
   19               | Expr
   20               | ε

   21 StrucAccess: StrucAccess PERIOD ID
   22            | ID PERIOD ID

   23 VarDecl: Type ID SEMICOLON
   24        | Type ID LSB Expr RSB SEMICOLON
   25        | STRUC ID LCB VarDecl RCB

   26 SwitchBlock: SwitchBlock CASE Expr LCB Code RCB
   27            | ε

   28 ElseBlock: ELSE LCB Code RCB
   29          | ε

   30 Stmt: ID ASS Expr SEMICOLON
   31     | ID LSB NUMBER RSB ASS Expr SEMICOLON
   32     | WRITE ID SEMICOLON
   33     | REEE Expr SEMICOLON
   34     | IF LPRN BoolExpr RPRN LCB Code RCB ElseBlock
   35     | SWITCH LPRN Expr RPRN LCB SwitchBlock Code RCB
   36     | WHILE LPRN BoolExpr RPRN LCB Code RCB
   37     | REPEAT LCB Code RCB UNTIL LPRN BoolExpr RPRN

   38 Expr: ID
   39     | ID LSB NUMBER RSB
   40     | FunctCall
   41     | StrucAccess
   42     | NUMBER
   43     | ID PLUS Expr
   44     | NUMBER PLUS Expr
   45     | ID MINUS Expr
   46     | NUMBER MINUS Expr
   47     | ID TIMES Expr
   48     | NUMBER TIMES Expr
   49     | ID DIVIDE Expr
   50     | NUMBER DIVIDE Expr

   51 BoolExpr: Expr LT Expr
   52         | Expr GT Expr
   53         | Expr LTE Expr
   54         | Expr GTE Expr
   55         | Expr NE Expr
   56         | Expr EQ Expr
   57         | BoolExpr AND BoolExpr
   58         | BoolExpr OR BoolExpr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <string> (258) 10
    CHAR <string> (259) 11
    STRING <string> (260) 12
    BOOL <string> (261) 13
    STRUC <string> (262) 25
    FUNCT <string> (263) 5
    ID <string> (264) 5 9 17 21 22 23 24 25 30 31 32 38 39 43 45 47 49
    NUMBER <string> (265) 31 39 42 44 46 48 50
    SEMICOLON <string> (266) 1 2 23 24 30 31 32 33
    COMMA <string> (267) 14 18
    UNDERSCORE <string> (268)
    PERIOD <string> (269) 21 22
    LT <string> (270) 51
    GT <string> (271) 52
    LTE <string> (272) 53
    GTE <string> (273) 54
    NE <string> (274) 55
    AND <string> (275) 57
    OR <string> (276) 58
    EQ <string> (277) 56
    TRUTH <string> (278)
    FALSITY <string> (279)
    ASS <string> (280) 30 31
    WRITE <string> (281) 32
    REEE <string> (282) 33
    IF <string> (283) 34
    ELSE <string> (284) 28
    SWITCH <string> (285) 35
    CASE <string> (286) 26
    WHILE <string> (287) 36
    REPEAT <string> (288) 37
    UNTIL <string> (289) 37
    PLUS <string> (290) 43 44
    MINUS <string> (291) 45 46
    TIMES <string> (292) 47 48
    DIVIDE <string> (293) 49 50
    LPRN <string> (294) 5 9 34 35 36 37
    RPRN <string> (295) 5 9 34 35 36 37
    LCB <string> (296) 5 25 26 28 34 35 36 37
    RCB <string> (297) 1 25 26 28 34 35 36 37
    LSB <string> (298) 24 31 39
    RSB <string> (299) 24 31 39


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    Program <ast_node> (46)
        on left: 1 2 3 4
        on right: 0 3
    DeclareFunct <string> (47)
        on left: 5
        on right: 1
    Code <ast_node> (48)
        on left: 6 7 8
        on right: 1 6 7 26 28 34 35 36 37
    FunctCall <ast_node> (49)
        on left: 9
        on right: 2 40
    Type <ast_node> (50)
        on left: 10 11 12 13
        on right: 5 17 23 24
    ParamsList <ast_node> (51)
        on left: 14 15 16
        on right: 5 14
    Param <ast_node> (52)
        on left: 17
        on right: 14 15
    CallParamsList <ast_node> (53)
        on left: 18 19 20
        on right: 9 18
    StrucAccess <ast_node> (54)
        on left: 21 22
        on right: 21 41
    VarDecl <ast_node> (55)
        on left: 23 24 25
        on right: 6 25
    SwitchBlock <ast_node> (56)
        on left: 26 27
        on right: 26 35
    ElseBlock <ast_node> (57)
        on left: 28 29
        on right: 34
    Stmt <ast_node> (58)
        on left: 30 31 32 33 34 35 36 37
        on right: 7
    Expr <ast_node> (59)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 18 19 24 26 30 31 33 35 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    BoolExpr <ast_node> (60)
        on left: 51 52 53 54 55 56 57 58
        on right: 34 36 37 57 58


State 0

    0 $accept: • Program $end

    FUNCT  shift, and go to state 1
    ID     shift, and go to state 2

    FUNCT     [reduce using rule 4 (Program)]
    ID        [reduce using rule 4 (Program)]
    $default  reduce using rule 4 (Program)

    Program       go to state 3
    DeclareFunct  go to state 4
    FunctCall     go to state 5


State 1

    5 DeclareFunct: FUNCT • Type ID LPRN ParamsList RPRN LCB

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9

    Type  go to state 10


State 2

    9 FunctCall: ID • LPRN CallParamsList RPRN

    LPRN  shift, and go to state 11


State 3

    0 $accept: Program • $end
    3 Program: Program • Program

    $end   shift, and go to state 12
    FUNCT  shift, and go to state 1
    ID     shift, and go to state 2

    $end   [reduce using rule 4 (Program)]
    FUNCT  [reduce using rule 4 (Program)]
    ID     [reduce using rule 4 (Program)]

    Program       go to state 13
    DeclareFunct  go to state 4
    FunctCall     go to state 5


State 4

    1 Program: DeclareFunct • Code RCB SEMICOLON

    $default  reduce using rule 8 (Code)

    Code  go to state 14


State 5

    2 Program: FunctCall • SEMICOLON

    SEMICOLON  shift, and go to state 15


State 6

   10 Type: INT •

    $default  reduce using rule 10 (Type)


State 7

   11 Type: CHAR •

    $default  reduce using rule 11 (Type)


State 8

   12 Type: STRING •

    $default  reduce using rule 12 (Type)


State 9

   13 Type: BOOL •

    $default  reduce using rule 13 (Type)


State 10

    5 DeclareFunct: FUNCT Type • ID LPRN ParamsList RPRN LCB

    ID  shift, and go to state 16


State 11

    9 FunctCall: ID LPRN • CallParamsList RPRN

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    $default  reduce using rule 20 (CallParamsList)

    FunctCall       go to state 19
    CallParamsList  go to state 20
    StrucAccess     go to state 21
    Expr            go to state 22


State 12

    0 $accept: Program $end •

    $default  accept


State 13

    3 Program: Program • Program
    3        | Program Program •

    FUNCT  shift, and go to state 1
    ID     shift, and go to state 2

    $end      reduce using rule 3 (Program)
    $end      [reduce using rule 4 (Program)]
    FUNCT     [reduce using rule 3 (Program)]
    FUNCT     [reduce using rule 4 (Program)]
    ID        [reduce using rule 3 (Program)]
    ID        [reduce using rule 4 (Program)]
    $default  reduce using rule 3 (Program)

    Program       go to state 13
    DeclareFunct  go to state 4
    FunctCall     go to state 5


State 14

    1 Program: DeclareFunct Code • RCB SEMICOLON
    6 Code: Code • VarDecl
    7     | Code • Stmt

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23
    ID      shift, and go to state 24
    WRITE   shift, and go to state 25
    REEE    shift, and go to state 26
    IF      shift, and go to state 27
    SWITCH  shift, and go to state 28
    WHILE   shift, and go to state 29
    REPEAT  shift, and go to state 30
    RCB     shift, and go to state 31

    Type     go to state 32
    VarDecl  go to state 33
    Stmt     go to state 34


State 15

    2 Program: FunctCall SEMICOLON •

    $default  reduce using rule 2 (Program)


State 16

    5 DeclareFunct: FUNCT Type ID • LPRN ParamsList RPRN LCB

    LPRN  shift, and go to state 35


State 17

    9 FunctCall: ID • LPRN CallParamsList RPRN
   22 StrucAccess: ID • PERIOD ID
   38 Expr: ID •
   39     | ID • LSB NUMBER RSB
   43     | ID • PLUS Expr
   45     | ID • MINUS Expr
   47     | ID • TIMES Expr
   49     | ID • DIVIDE Expr

    PERIOD  shift, and go to state 36
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    LPRN    shift, and go to state 11
    LSB     shift, and go to state 41

    $default  reduce using rule 38 (Expr)


State 18

   42 Expr: NUMBER •
   44     | NUMBER • PLUS Expr
   46     | NUMBER • MINUS Expr
   48     | NUMBER • TIMES Expr
   50     | NUMBER • DIVIDE Expr

    PLUS    shift, and go to state 42
    MINUS   shift, and go to state 43
    TIMES   shift, and go to state 44
    DIVIDE  shift, and go to state 45

    $default  reduce using rule 42 (Expr)


State 19

   40 Expr: FunctCall •

    $default  reduce using rule 40 (Expr)


State 20

    9 FunctCall: ID LPRN CallParamsList • RPRN
   18 CallParamsList: CallParamsList • COMMA Expr

    COMMA  shift, and go to state 46
    RPRN   shift, and go to state 47


State 21

   21 StrucAccess: StrucAccess • PERIOD ID
   41 Expr: StrucAccess •

    PERIOD  shift, and go to state 48

    $default  reduce using rule 41 (Expr)


State 22

   19 CallParamsList: Expr •

    $default  reduce using rule 19 (CallParamsList)


State 23

   25 VarDecl: STRUC • ID LCB VarDecl RCB

    ID  shift, and go to state 49


State 24

   30 Stmt: ID • ASS Expr SEMICOLON
   31     | ID • LSB NUMBER RSB ASS Expr SEMICOLON

    ASS  shift, and go to state 50
    LSB  shift, and go to state 51


State 25

   32 Stmt: WRITE • ID SEMICOLON

    ID  shift, and go to state 52


State 26

   33 Stmt: REEE • Expr SEMICOLON

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 53


State 27

   34 Stmt: IF • LPRN BoolExpr RPRN LCB Code RCB ElseBlock

    LPRN  shift, and go to state 54


State 28

   35 Stmt: SWITCH • LPRN Expr RPRN LCB SwitchBlock Code RCB

    LPRN  shift, and go to state 55


State 29

   36 Stmt: WHILE • LPRN BoolExpr RPRN LCB Code RCB

    LPRN  shift, and go to state 56


State 30

   37 Stmt: REPEAT • LCB Code RCB UNTIL LPRN BoolExpr RPRN

    LCB  shift, and go to state 57


State 31

    1 Program: DeclareFunct Code RCB • SEMICOLON

    SEMICOLON  shift, and go to state 58


State 32

   23 VarDecl: Type • ID SEMICOLON
   24        | Type • ID LSB Expr RSB SEMICOLON

    ID  shift, and go to state 59


State 33

    6 Code: Code VarDecl •

    $default  reduce using rule 6 (Code)


State 34

    7 Code: Code Stmt •

    $default  reduce using rule 7 (Code)


State 35

    5 DeclareFunct: FUNCT Type ID LPRN • ParamsList RPRN LCB

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9

    $default  reduce using rule 16 (ParamsList)

    Type        go to state 60
    ParamsList  go to state 61
    Param       go to state 62


State 36

   22 StrucAccess: ID PERIOD • ID

    ID  shift, and go to state 63


State 37

   43 Expr: ID PLUS • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 64


State 38

   45 Expr: ID MINUS • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 65


State 39

   47 Expr: ID TIMES • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 66


State 40

   49 Expr: ID DIVIDE • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 67


State 41

   39 Expr: ID LSB • NUMBER RSB

    NUMBER  shift, and go to state 68


State 42

   44 Expr: NUMBER PLUS • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 69


State 43

   46 Expr: NUMBER MINUS • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 70


State 44

   48 Expr: NUMBER TIMES • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 71


State 45

   50 Expr: NUMBER DIVIDE • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 72


State 46

   18 CallParamsList: CallParamsList COMMA • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 73


State 47

    9 FunctCall: ID LPRN CallParamsList RPRN •

    $default  reduce using rule 9 (FunctCall)


State 48

   21 StrucAccess: StrucAccess PERIOD • ID

    ID  shift, and go to state 74


State 49

   25 VarDecl: STRUC ID • LCB VarDecl RCB

    LCB  shift, and go to state 75


State 50

   30 Stmt: ID ASS • Expr SEMICOLON

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 76


State 51

   31 Stmt: ID LSB • NUMBER RSB ASS Expr SEMICOLON

    NUMBER  shift, and go to state 77


State 52

   32 Stmt: WRITE ID • SEMICOLON

    SEMICOLON  shift, and go to state 78


State 53

   33 Stmt: REEE Expr • SEMICOLON

    SEMICOLON  shift, and go to state 79


State 54

   34 Stmt: IF LPRN • BoolExpr RPRN LCB Code RCB ElseBlock

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 80
    BoolExpr     go to state 81


State 55

   35 Stmt: SWITCH LPRN • Expr RPRN LCB SwitchBlock Code RCB

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 82


State 56

   36 Stmt: WHILE LPRN • BoolExpr RPRN LCB Code RCB

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 80
    BoolExpr     go to state 83


State 57

   37 Stmt: REPEAT LCB • Code RCB UNTIL LPRN BoolExpr RPRN

    $default  reduce using rule 8 (Code)

    Code  go to state 84


State 58

    1 Program: DeclareFunct Code RCB SEMICOLON •

    $default  reduce using rule 1 (Program)


State 59

   23 VarDecl: Type ID • SEMICOLON
   24        | Type ID • LSB Expr RSB SEMICOLON

    SEMICOLON  shift, and go to state 85
    LSB        shift, and go to state 86


State 60

   17 Param: Type • ID

    ID  shift, and go to state 87


State 61

    5 DeclareFunct: FUNCT Type ID LPRN ParamsList • RPRN LCB
   14 ParamsList: ParamsList • COMMA Param

    COMMA  shift, and go to state 88
    RPRN   shift, and go to state 89


State 62

   15 ParamsList: Param •

    $default  reduce using rule 15 (ParamsList)


State 63

   22 StrucAccess: ID PERIOD ID •

    $default  reduce using rule 22 (StrucAccess)


State 64

   43 Expr: ID PLUS Expr •

    $default  reduce using rule 43 (Expr)


State 65

   45 Expr: ID MINUS Expr •

    $default  reduce using rule 45 (Expr)


State 66

   47 Expr: ID TIMES Expr •

    $default  reduce using rule 47 (Expr)


State 67

   49 Expr: ID DIVIDE Expr •

    $default  reduce using rule 49 (Expr)


State 68

   39 Expr: ID LSB NUMBER • RSB

    RSB  shift, and go to state 90


State 69

   44 Expr: NUMBER PLUS Expr •

    $default  reduce using rule 44 (Expr)


State 70

   46 Expr: NUMBER MINUS Expr •

    $default  reduce using rule 46 (Expr)


State 71

   48 Expr: NUMBER TIMES Expr •

    $default  reduce using rule 48 (Expr)


State 72

   50 Expr: NUMBER DIVIDE Expr •

    $default  reduce using rule 50 (Expr)


State 73

   18 CallParamsList: CallParamsList COMMA Expr •

    $default  reduce using rule 18 (CallParamsList)


State 74

   21 StrucAccess: StrucAccess PERIOD ID •

    $default  reduce using rule 21 (StrucAccess)


State 75

   25 VarDecl: STRUC ID LCB • VarDecl RCB

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23

    Type     go to state 32
    VarDecl  go to state 91


State 76

   30 Stmt: ID ASS Expr • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 77

   31 Stmt: ID LSB NUMBER • RSB ASS Expr SEMICOLON

    RSB  shift, and go to state 93


State 78

   32 Stmt: WRITE ID SEMICOLON •

    $default  reduce using rule 32 (Stmt)


State 79

   33 Stmt: REEE Expr SEMICOLON •

    $default  reduce using rule 33 (Stmt)


State 80

   51 BoolExpr: Expr • LT Expr
   52         | Expr • GT Expr
   53         | Expr • LTE Expr
   54         | Expr • GTE Expr
   55         | Expr • NE Expr
   56         | Expr • EQ Expr

    LT   shift, and go to state 94
    GT   shift, and go to state 95
    LTE  shift, and go to state 96
    GTE  shift, and go to state 97
    NE   shift, and go to state 98
    EQ   shift, and go to state 99


State 81

   34 Stmt: IF LPRN BoolExpr • RPRN LCB Code RCB ElseBlock
   57 BoolExpr: BoolExpr • AND BoolExpr
   58         | BoolExpr • OR BoolExpr

    AND   shift, and go to state 100
    OR    shift, and go to state 101
    RPRN  shift, and go to state 102


State 82

   35 Stmt: SWITCH LPRN Expr • RPRN LCB SwitchBlock Code RCB

    RPRN  shift, and go to state 103


State 83

   36 Stmt: WHILE LPRN BoolExpr • RPRN LCB Code RCB
   57 BoolExpr: BoolExpr • AND BoolExpr
   58         | BoolExpr • OR BoolExpr

    AND   shift, and go to state 100
    OR    shift, and go to state 101
    RPRN  shift, and go to state 104


State 84

    6 Code: Code • VarDecl
    7     | Code • Stmt
   37 Stmt: REPEAT LCB Code • RCB UNTIL LPRN BoolExpr RPRN

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23
    ID      shift, and go to state 24
    WRITE   shift, and go to state 25
    REEE    shift, and go to state 26
    IF      shift, and go to state 27
    SWITCH  shift, and go to state 28
    WHILE   shift, and go to state 29
    REPEAT  shift, and go to state 30
    RCB     shift, and go to state 105

    Type     go to state 32
    VarDecl  go to state 33
    Stmt     go to state 34


State 85

   23 VarDecl: Type ID SEMICOLON •

    $default  reduce using rule 23 (VarDecl)


State 86

   24 VarDecl: Type ID LSB • Expr RSB SEMICOLON

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 106


State 87

   17 Param: Type ID •

    $default  reduce using rule 17 (Param)


State 88

   14 ParamsList: ParamsList COMMA • Param

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9

    Type   go to state 60
    Param  go to state 107


State 89

    5 DeclareFunct: FUNCT Type ID LPRN ParamsList RPRN • LCB

    LCB  shift, and go to state 108


State 90

   39 Expr: ID LSB NUMBER RSB •

    $default  reduce using rule 39 (Expr)


State 91

   25 VarDecl: STRUC ID LCB VarDecl • RCB

    RCB  shift, and go to state 109


State 92

   30 Stmt: ID ASS Expr SEMICOLON •

    $default  reduce using rule 30 (Stmt)


State 93

   31 Stmt: ID LSB NUMBER RSB • ASS Expr SEMICOLON

    ASS  shift, and go to state 110


State 94

   51 BoolExpr: Expr LT • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 111


State 95

   52 BoolExpr: Expr GT • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 112


State 96

   53 BoolExpr: Expr LTE • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 113


State 97

   54 BoolExpr: Expr GTE • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 114


State 98

   55 BoolExpr: Expr NE • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 115


State 99

   56 BoolExpr: Expr EQ • Expr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 116


State 100

   57 BoolExpr: BoolExpr AND • BoolExpr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 80
    BoolExpr     go to state 117


State 101

   58 BoolExpr: BoolExpr OR • BoolExpr

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 80
    BoolExpr     go to state 118


State 102

   34 Stmt: IF LPRN BoolExpr RPRN • LCB Code RCB ElseBlock

    LCB  shift, and go to state 119


State 103

   35 Stmt: SWITCH LPRN Expr RPRN • LCB SwitchBlock Code RCB

    LCB  shift, and go to state 120


State 104

   36 Stmt: WHILE LPRN BoolExpr RPRN • LCB Code RCB

    LCB  shift, and go to state 121


State 105

   37 Stmt: REPEAT LCB Code RCB • UNTIL LPRN BoolExpr RPRN

    UNTIL  shift, and go to state 122


State 106

   24 VarDecl: Type ID LSB Expr • RSB SEMICOLON

    RSB  shift, and go to state 123


State 107

   14 ParamsList: ParamsList COMMA Param •

    $default  reduce using rule 14 (ParamsList)


State 108

    5 DeclareFunct: FUNCT Type ID LPRN ParamsList RPRN LCB •

    $default  reduce using rule 5 (DeclareFunct)


State 109

   25 VarDecl: STRUC ID LCB VarDecl RCB •

    $default  reduce using rule 25 (VarDecl)


State 110

   31 Stmt: ID LSB NUMBER RSB ASS • Expr SEMICOLON

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 124


State 111

   51 BoolExpr: Expr LT Expr •

    $default  reduce using rule 51 (BoolExpr)


State 112

   52 BoolExpr: Expr GT Expr •

    $default  reduce using rule 52 (BoolExpr)


State 113

   53 BoolExpr: Expr LTE Expr •

    $default  reduce using rule 53 (BoolExpr)


State 114

   54 BoolExpr: Expr GTE Expr •

    $default  reduce using rule 54 (BoolExpr)


State 115

   55 BoolExpr: Expr NE Expr •

    $default  reduce using rule 55 (BoolExpr)


State 116

   56 BoolExpr: Expr EQ Expr •

    $default  reduce using rule 56 (BoolExpr)


State 117

   57 BoolExpr: BoolExpr • AND BoolExpr
   57         | BoolExpr AND BoolExpr •
   58         | BoolExpr • OR BoolExpr

    AND  shift, and go to state 100
    OR   shift, and go to state 101

    AND       [reduce using rule 57 (BoolExpr)]
    OR        [reduce using rule 57 (BoolExpr)]
    $default  reduce using rule 57 (BoolExpr)


State 118

   57 BoolExpr: BoolExpr • AND BoolExpr
   58         | BoolExpr • OR BoolExpr
   58         | BoolExpr OR BoolExpr •

    AND  shift, and go to state 100
    OR   shift, and go to state 101

    AND       [reduce using rule 58 (BoolExpr)]
    OR        [reduce using rule 58 (BoolExpr)]
    $default  reduce using rule 58 (BoolExpr)


State 119

   34 Stmt: IF LPRN BoolExpr RPRN LCB • Code RCB ElseBlock

    $default  reduce using rule 8 (Code)

    Code  go to state 125


State 120

   35 Stmt: SWITCH LPRN Expr RPRN LCB • SwitchBlock Code RCB

    $default  reduce using rule 27 (SwitchBlock)

    SwitchBlock  go to state 126


State 121

   36 Stmt: WHILE LPRN BoolExpr RPRN LCB • Code RCB

    $default  reduce using rule 8 (Code)

    Code  go to state 127


State 122

   37 Stmt: REPEAT LCB Code RCB UNTIL • LPRN BoolExpr RPRN

    LPRN  shift, and go to state 128


State 123

   24 VarDecl: Type ID LSB Expr RSB • SEMICOLON

    SEMICOLON  shift, and go to state 129


State 124

   31 Stmt: ID LSB NUMBER RSB ASS Expr • SEMICOLON

    SEMICOLON  shift, and go to state 130


State 125

    6 Code: Code • VarDecl
    7     | Code • Stmt
   34 Stmt: IF LPRN BoolExpr RPRN LCB Code • RCB ElseBlock

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23
    ID      shift, and go to state 24
    WRITE   shift, and go to state 25
    REEE    shift, and go to state 26
    IF      shift, and go to state 27
    SWITCH  shift, and go to state 28
    WHILE   shift, and go to state 29
    REPEAT  shift, and go to state 30
    RCB     shift, and go to state 131

    Type     go to state 32
    VarDecl  go to state 33
    Stmt     go to state 34


State 126

   26 SwitchBlock: SwitchBlock • CASE Expr LCB Code RCB
   35 Stmt: SWITCH LPRN Expr RPRN LCB SwitchBlock • Code RCB

    CASE  shift, and go to state 132

    $default  reduce using rule 8 (Code)

    Code  go to state 133


State 127

    6 Code: Code • VarDecl
    7     | Code • Stmt
   36 Stmt: WHILE LPRN BoolExpr RPRN LCB Code • RCB

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23
    ID      shift, and go to state 24
    WRITE   shift, and go to state 25
    REEE    shift, and go to state 26
    IF      shift, and go to state 27
    SWITCH  shift, and go to state 28
    WHILE   shift, and go to state 29
    REPEAT  shift, and go to state 30
    RCB     shift, and go to state 134

    Type     go to state 32
    VarDecl  go to state 33
    Stmt     go to state 34


State 128

   37 Stmt: REPEAT LCB Code RCB UNTIL LPRN • BoolExpr RPRN

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 80
    BoolExpr     go to state 135


State 129

   24 VarDecl: Type ID LSB Expr RSB SEMICOLON •

    $default  reduce using rule 24 (VarDecl)


State 130

   31 Stmt: ID LSB NUMBER RSB ASS Expr SEMICOLON •

    $default  reduce using rule 31 (Stmt)


State 131

   34 Stmt: IF LPRN BoolExpr RPRN LCB Code RCB • ElseBlock

    ELSE  shift, and go to state 136

    $default  reduce using rule 29 (ElseBlock)

    ElseBlock  go to state 137


State 132

   26 SwitchBlock: SwitchBlock CASE • Expr LCB Code RCB

    ID      shift, and go to state 17
    NUMBER  shift, and go to state 18

    FunctCall    go to state 19
    StrucAccess  go to state 21
    Expr         go to state 138


State 133

    6 Code: Code • VarDecl
    7     | Code • Stmt
   35 Stmt: SWITCH LPRN Expr RPRN LCB SwitchBlock Code • RCB

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23
    ID      shift, and go to state 24
    WRITE   shift, and go to state 25
    REEE    shift, and go to state 26
    IF      shift, and go to state 27
    SWITCH  shift, and go to state 28
    WHILE   shift, and go to state 29
    REPEAT  shift, and go to state 30
    RCB     shift, and go to state 139

    Type     go to state 32
    VarDecl  go to state 33
    Stmt     go to state 34


State 134

   36 Stmt: WHILE LPRN BoolExpr RPRN LCB Code RCB •

    $default  reduce using rule 36 (Stmt)


State 135

   37 Stmt: REPEAT LCB Code RCB UNTIL LPRN BoolExpr • RPRN
   57 BoolExpr: BoolExpr • AND BoolExpr
   58         | BoolExpr • OR BoolExpr

    AND   shift, and go to state 100
    OR    shift, and go to state 101
    RPRN  shift, and go to state 140


State 136

   28 ElseBlock: ELSE • LCB Code RCB

    LCB  shift, and go to state 141


State 137

   34 Stmt: IF LPRN BoolExpr RPRN LCB Code RCB ElseBlock •

    $default  reduce using rule 34 (Stmt)


State 138

   26 SwitchBlock: SwitchBlock CASE Expr • LCB Code RCB

    LCB  shift, and go to state 142


State 139

   35 Stmt: SWITCH LPRN Expr RPRN LCB SwitchBlock Code RCB •

    $default  reduce using rule 35 (Stmt)


State 140

   37 Stmt: REPEAT LCB Code RCB UNTIL LPRN BoolExpr RPRN •

    $default  reduce using rule 37 (Stmt)


State 141

   28 ElseBlock: ELSE LCB • Code RCB

    $default  reduce using rule 8 (Code)

    Code  go to state 143


State 142

   26 SwitchBlock: SwitchBlock CASE Expr LCB • Code RCB

    $default  reduce using rule 8 (Code)

    Code  go to state 144


State 143

    6 Code: Code • VarDecl
    7     | Code • Stmt
   28 ElseBlock: ELSE LCB Code • RCB

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23
    ID      shift, and go to state 24
    WRITE   shift, and go to state 25
    REEE    shift, and go to state 26
    IF      shift, and go to state 27
    SWITCH  shift, and go to state 28
    WHILE   shift, and go to state 29
    REPEAT  shift, and go to state 30
    RCB     shift, and go to state 145

    Type     go to state 32
    VarDecl  go to state 33
    Stmt     go to state 34


State 144

    6 Code: Code • VarDecl
    7     | Code • Stmt
   26 SwitchBlock: SwitchBlock CASE Expr LCB Code • RCB

    INT     shift, and go to state 6
    CHAR    shift, and go to state 7
    STRING  shift, and go to state 8
    BOOL    shift, and go to state 9
    STRUC   shift, and go to state 23
    ID      shift, and go to state 24
    WRITE   shift, and go to state 25
    REEE    shift, and go to state 26
    IF      shift, and go to state 27
    SWITCH  shift, and go to state 28
    WHILE   shift, and go to state 29
    REPEAT  shift, and go to state 30
    RCB     shift, and go to state 146

    Type     go to state 32
    VarDecl  go to state 33
    Stmt     go to state 34


State 145

   28 ElseBlock: ELSE LCB Code RCB •

    $default  reduce using rule 28 (ElseBlock)


State 146

   26 SwitchBlock: SwitchBlock CASE Expr LCB Code RCB •

    $default  reduce using rule 26 (SwitchBlock)
