Nonterminals useless in grammar

    Code
    Type
    ParamsList
    Param
    VarDecl
    Stmt


Terminals unused in grammar

    INT
    CHAR
    STRING
    BOOL
    STRUC
    FUNCT
    UNDERSCORE
    PERIOD
    LT
    GT
    LTE
    GTE
    NE
    AND
    OR
    EQ
    ASS
    WRITE
    REEE
    LCB
    RCB
    LSB
    RSB


Rules useless in grammar

   17 Program: FUNCT Type ID LPRN ParamsList RPRN LCB Code RCB SEMICOLON

   18 Code: Code VarDecl
   19     | Code Stmt

   20 Type: INT
   21     | CHAR
   22     | STRING
   23     | BOOL

   24 ParamsList: ParamsList COMMA Param
   25           | Param
   26           | ε

   27 Param: Type ID

   28 VarDecl: Type ID SEMICOLON
   29        | Type ID LSB NUMBER RSB
   30        | STRUC ID LCB VarDecl RCB

   31 Stmt: ID ASS Expr SEMICOLON
   32     | ID LSB NUMBER RSB ASS Expr SEMICOLON
   33     | WRITE ID SEMICOLON
   34     | REEE Expr SEMICOLON


State 6 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: FunctCall SEMICOLON
    2        | Program Program

    3 FunctCall: ID LPRN CallParamsList RPRN

    4 CallParamsList: CallParamsList COMMA Expr
    5               | Expr

    6 Expr: ID
    7     | FunctCall
    8     | NUMBER
    9     | ID PLUS Expr
   10     | NUMBER PLUS Expr
   11     | ID MINUS Expr
   12     | NUMBER MINUS Expr
   13     | ID TIMES Expr
   14     | NUMBER TIMES Expr
   15     | ID DIVIDE Expr
   16     | NUMBER DIVIDE Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT <string> (258)
    CHAR <string> (259)
    STRING <string> (260)
    BOOL <string> (261)
    STRUC <string> (262)
    FUNCT <string> (263)
    ID <string> (264) 3 6 9 11 13 15
    NUMBER <string> (265) 8 10 12 14 16
    SEMICOLON <string> (266) 1
    COMMA <string> (267) 4
    UNDERSCORE <string> (268)
    PERIOD <string> (269)
    LT <string> (270)
    GT <string> (271)
    LTE <string> (272)
    GTE <string> (273)
    NE <string> (274)
    AND <string> (275)
    OR <string> (276)
    EQ <string> (277)
    ASS <string> (278)
    WRITE <string> (279)
    REEE <string> (280)
    PLUS <string> (281) 9 10
    MINUS <string> (282) 11 12
    TIMES <string> (283) 13 14
    DIVIDE <string> (284) 15 16
    LPRN <string> (285) 3
    RPRN <string> (286) 3
    LCB <string> (287)
    RCB <string> (288)
    LSB <string> (289)
    RSB <string> (290)


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    Program <ast_node> (37)
        on left: 1 2
        on right: 0 2
    FunctCall <ast_node> (38)
        on left: 3
        on right: 1 7
    CallParamsList <ast_node> (39)
        on left: 4 5
        on right: 3 4
    Expr <ast_node> (40)
        on left: 6 7 8 9 10 11 12 13 14 15 16
        on right: 4 5 9 10 11 12 13 14 15 16


State 0

    0 $accept: • Program $end

    ID  shift, and go to state 1

    Program    go to state 2
    FunctCall  go to state 3


State 1

    3 FunctCall: ID • LPRN CallParamsList RPRN

    LPRN  shift, and go to state 4


State 2

    0 $accept: Program • $end
    2 Program: Program • Program

    $end  shift, and go to state 5
    ID    shift, and go to state 1

    Program    go to state 6
    FunctCall  go to state 3


State 3

    1 Program: FunctCall • SEMICOLON

    SEMICOLON  shift, and go to state 7


State 4

    3 FunctCall: ID LPRN • CallParamsList RPRN

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall       go to state 10
    CallParamsList  go to state 11
    Expr            go to state 12


State 5

    0 $accept: Program $end •

    $default  accept


State 6

    2 Program: Program • Program
    2        | Program Program •

    ID  shift, and go to state 1

    ID        [reduce using rule 2 (Program)]
    $default  reduce using rule 2 (Program)

    Program    go to state 6
    FunctCall  go to state 3


State 7

    1 Program: FunctCall SEMICOLON •

    $default  reduce using rule 1 (Program)


State 8

    3 FunctCall: ID • LPRN CallParamsList RPRN
    6 Expr: ID •
    9     | ID • PLUS Expr
   11     | ID • MINUS Expr
   13     | ID • TIMES Expr
   15     | ID • DIVIDE Expr

    PLUS    shift, and go to state 13
    MINUS   shift, and go to state 14
    TIMES   shift, and go to state 15
    DIVIDE  shift, and go to state 16
    LPRN    shift, and go to state 4

    $default  reduce using rule 6 (Expr)


State 9

    8 Expr: NUMBER •
   10     | NUMBER • PLUS Expr
   12     | NUMBER • MINUS Expr
   14     | NUMBER • TIMES Expr
   16     | NUMBER • DIVIDE Expr

    PLUS    shift, and go to state 17
    MINUS   shift, and go to state 18
    TIMES   shift, and go to state 19
    DIVIDE  shift, and go to state 20

    $default  reduce using rule 8 (Expr)


State 10

    7 Expr: FunctCall •

    $default  reduce using rule 7 (Expr)


State 11

    3 FunctCall: ID LPRN CallParamsList • RPRN
    4 CallParamsList: CallParamsList • COMMA Expr

    COMMA  shift, and go to state 21
    RPRN   shift, and go to state 22


State 12

    5 CallParamsList: Expr •

    $default  reduce using rule 5 (CallParamsList)


State 13

    9 Expr: ID PLUS • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 23


State 14

   11 Expr: ID MINUS • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 24


State 15

   13 Expr: ID TIMES • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 25


State 16

   15 Expr: ID DIVIDE • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 26


State 17

   10 Expr: NUMBER PLUS • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 27


State 18

   12 Expr: NUMBER MINUS • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 28


State 19

   14 Expr: NUMBER TIMES • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 29


State 20

   16 Expr: NUMBER DIVIDE • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 30


State 21

    4 CallParamsList: CallParamsList COMMA • Expr

    ID      shift, and go to state 8
    NUMBER  shift, and go to state 9

    FunctCall  go to state 10
    Expr       go to state 31


State 22

    3 FunctCall: ID LPRN CallParamsList RPRN •

    $default  reduce using rule 3 (FunctCall)


State 23

    9 Expr: ID PLUS Expr •

    $default  reduce using rule 9 (Expr)


State 24

   11 Expr: ID MINUS Expr •

    $default  reduce using rule 11 (Expr)


State 25

   13 Expr: ID TIMES Expr •

    $default  reduce using rule 13 (Expr)


State 26

   15 Expr: ID DIVIDE Expr •

    $default  reduce using rule 15 (Expr)


State 27

   10 Expr: NUMBER PLUS Expr •

    $default  reduce using rule 10 (Expr)


State 28

   12 Expr: NUMBER MINUS Expr •

    $default  reduce using rule 12 (Expr)


State 29

   14 Expr: NUMBER TIMES Expr •

    $default  reduce using rule 14 (Expr)


State 30

   16 Expr: NUMBER DIVIDE Expr •

    $default  reduce using rule 16 (Expr)


State 31

    4 CallParamsList: CallParamsList COMMA Expr •

    $default  reduce using rule 4 (CallParamsList)
